{
	"name": "dataflowexecution",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employeedataset",
						"type": "DatasetReference"
					},
					"name": "employeedata"
				},
				{
					"dataset": {
						"referenceName": "departmentdataset",
						"type": "DatasetReference"
					},
					"name": "departmentdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "newoutputdata",
						"type": "DatasetReference"
					},
					"name": "outputdata"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeedata",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> departmentdata",
				"employeedata, departmentdata join(Column_4 == departmentdata@Column_1,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['JoinComesToOuput.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Column_1 = employeedata@Column_1,",
				"          Column_2 = employeedata@Column_2,",
				"          Column_4,",
				"          Column_1 = departmentdata@Column_1,",
				"          Column_2 = departmentdata@Column_2",
				"     ),",
				"     partitionBy('hash', 1)) ~> outputdata"
			]
		}
	}
}